name: Sync with develop

on:
  # Run manually from the Actions tab
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Branch in repo1 (NanoTabletRFIDv2) to sync"
        default: "master"
        required: true
      dest_branch:
        description: "Branch in this repo (CFNano_Tablet) to update"
        default: "main"
        required: true

permissions:
  contents: write     # allow this workflow to push commits to repo2
  pull-requests: write

concurrency:
  group: sync-software
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo2 (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.dest_branch }}

      - name: Configure Git author
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Verify secret exists
        env:
          REPO1_TOKEN: ${{ secrets.REPO1_TOKEN }}
        run: |
          set -euo pipefail
          if [ -z "${REPO1_TOKEN:-}" ]; then
            echo "ERROR: Missing REPO1_TOKEN secret in this repository."
            echo "Create a PAT with read access to TomasSpusta/NanoTabletRFIDv2 and add it as 'REPO1_TOKEN'."
            exit 1
          fi

      - name: Clone repo1 (NanoTabletRFIDv2) with token
        env:
          REPO1_TOKEN: ${{ secrets.REPO1_TOKEN }}
        run: |
          set -euo pipefail
          SRC_BRANCH="${{ github.event.inputs.source_branch }}"
          git clone --depth 1 --branch "$SRC_BRANCH" \
            "https://x-access-token:${REPO1_TOKEN}@github.com/TomasSpusta/NanoTabletRFIDv2.git" repo1
          echo "Cloned NanoTabletRFIDv2@$SRC_BRANCH"
          ls -la repo1 | head -n 100

      - name: Mirror contents into SOFTWARE/ (preserve this repoâ€™s CI)
        run: |
          set -euo pipefail
          mkdir -p SOFTWARE
          rsync -a --delete \
            --exclude ".git" \
            --exclude ".github" \
            repo1/ SOFTWARE/
          echo "Sync complete to SOFTWARE/"

      - name: Commit and push if changed
        run: |
          set -euo pipefail
          DEST_BRANCH="${{ github.event.inputs.dest_branch }}"
          git add SOFTWARE
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Sync SOFTWARE from NanoTabletRFIDv2:${{ github.event.inputs.source_branch }}"
          git push origin "HEAD:$DEST_BRANCH"
          echo "Changes pushed to $DEST_BRANCH"
